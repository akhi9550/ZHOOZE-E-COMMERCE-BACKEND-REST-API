definitions:
  models.AddCoupon:
    properties:
      coupon:
        type: string
      discount_percentage:
        type: integer
      minimum_price:
        type: number
      validity:
        type: boolean
    required:
    - coupon
    - discount_percentage
    - minimum_price
    - validity
    type: object
  models.AddressInfo:
    properties:
      city:
        type: string
      house_name:
        type: string
      name:
        type: string
      pin:
        type: string
      state:
        type: string
      street:
        type: string
    required:
    - house_name
    - name
    - pin
    - state
    type: object
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Category:
    properties:
      category:
        type: string
    type: object
  models.CategoryOfferReceiver:
    properties:
      category_id:
        type: integer
      discount_percentage:
        type: integer
      offer_name:
        type: string
    required:
    - category_id
    - discount_percentage
    - offer_name
    type: object
  models.ChangePassword:
    properties:
      old_password:
        type: string
      password:
        type: string
      re_password:
        type: string
    type: object
  models.CouponAddUser:
    properties:
      coupon_name:
        type: string
    required:
    - coupon_name
    type: object
  models.ForgotPasswordSend:
    properties:
      phone:
        type: string
    type: object
  models.ForgotVerify:
    properties:
      newpassword:
        maxLength: 20
        minLength: 6
        type: string
      otp:
        type: string
      phone:
        type: string
    required:
    - newpassword
    - otp
    - phone
    type: object
  models.LoginDetail:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.NewPaymentMethod:
    properties:
      payment_name:
        type: string
    type: object
  models.OTPData:
    properties:
      phone:
        type: string
    type: object
  models.OrderFromCart:
    properties:
      address_id:
        type: integer
      payment_id:
        type: integer
    required:
    - address_id
    - payment_id
    type: object
  models.Product:
    properties:
      category_id:
        type: integer
      description:
        type: string
      name:
        type: string
      price:
        type: number
      size:
        type: integer
      stock:
        type: integer
    required:
    - category_id
    - description
    - name
    - price
    - size
    - stock
    type: object
  models.ProductOfferReceiver:
    properties:
      discount_percentage:
        type: integer
      offer_name:
        type: string
      product_id:
        type: integer
    required:
    - discount_percentage
    - offer_name
    - product_id
    type: object
  models.ProductUpdate:
    properties:
      product_id:
        type: integer
      stock:
        type: integer
    type: object
  models.SetNewName:
    properties:
      current:
        type: string
      new:
        type: string
    type: object
  models.UserSignUp:
    properties:
      email:
        type: string
      firstname:
        minLength: 3
        type: string
      lastname:
        minLength: 1
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
      phone:
        type: string
      referral_code:
        type: string
    type: object
  models.UsersProfileDetails:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      phone:
        type: string
    type: object
  models.VerifyData:
    properties:
      code:
        type: string
      user:
        $ref: '#/definitions/models.OTPData'
    required:
    - code
    - user
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact:
    name: API Support
  description: Zhooze is an E-commerce platform to purchase and sell shoes
  title: Go + Gin Zhooze E-Commerce API
  version: 1.0.0
paths:
  /admin/adminlogin:
    post:
      consumes:
      - application/json
      description: Login handler for jerseyhub admins
      parameters:
      - description: Admin login details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin Login
      tags:
      - Admin
  /admin/category:
    delete:
      consumes:
      - application/json
      description: Admin can delete a category
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete Category
      tags:
      - Admin Category Management
    get:
      consumes:
      - application/json
      description: Retrieve All Category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Category
      tags:
      - Admin Category Management
    post:
      consumes:
      - application/json
      description: Admin can add new categories for products
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Category
      tags:
      - Admin Category Management
    put:
      consumes:
      - application/json
      description: Admin can update name of a category into new name
      parameters:
      - description: set new name
        in: body
        name: set_new_name
        required: true
        schema:
          $ref: '#/definitions/models.SetNewName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Update Category
      tags:
      - Admin Category Management
  /admin/coupons:
    get:
      consumes:
      - application/json
      description: Get Available coupon details for admin side
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get coupon details
      tags:
      - Admin Coupon Management
    patch:
      consumes:
      - application/json
      description: Expire Coupon by admin which are already present by passing coupon
        id
      parameters:
      - description: Coupon id
        in: query
        name: coupon_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Expire Coupon
      tags:
      - Admin Coupon Management
    post:
      consumes:
      - application/json
      description: Add A new Coupon which can be used by the users from the checkout
        section
      parameters:
      - description: Add new Coupon
        in: body
        name: coupon
        required: true
        schema:
          $ref: '#/definitions/models.AddCoupon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add  a new coupon by Admin
      tags:
      - Admin Coupon Management
  /admin/dashboard:
    get:
      consumes:
      - application/json
      description: Retrieve admin dashboard
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Dashboard
      tags:
      - Admin
  /admin/offer/category-offer:
    delete:
      consumes:
      - application/json
      description: Add a new Offer for a category by specifying a limit
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add  Category Offer
      tags:
      - Admin Offer Management
    get:
      consumes:
      - application/json
      description: Add a new Offer for a category by specifying a limit
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add  Category Offer
      tags:
      - Admin Offer Management
    post:
      consumes:
      - application/json
      description: Add a new Offer for a product by specifying a limit
      parameters:
      - description: Add new category Offer
        in: body
        name: coupon
        required: true
        schema:
          $ref: '#/definitions/models.CategoryOfferReceiver'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Category Offer
      tags:
      - Admin Offer Management
  /admin/offer/product-offer:
    delete:
      consumes:
      - application/json
      description: Add a new Offer for a product by specifying a limit
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add  Product Offer
      tags:
      - Admin Offer Management
    get:
      consumes:
      - application/json
      description: Add a new Offer for a product by specifying a limit
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add  Product Offer
      tags:
      - Admin Offer Management
    post:
      consumes:
      - application/json
      description: Add a new Offer for a product by specifying a limit
      parameters:
      - description: Add new Product Offer
        in: body
        name: coupon
        required: true
        schema:
          $ref: '#/definitions/models.ProductOfferReceiver'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add  Product Offer
      tags:
      - Admin Offer Management
  /admin/order:
    get:
      consumes:
      - application/json
      description: Get all order details to the admin side
      parameters:
      - description: Page number
        in: query
        name: page
        type: string
      - description: Page Count
        in: query
        name: count
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get All order details for admin
      tags:
      - Admin Order Management
  /admin/order/approve:
    get:
      consumes:
      - application/json
      description: Approve Order from admin side which is in processing state
      parameters:
      - description: Order ID
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Approve Order
      tags:
      - Admin Order Management
  /admin/order/cancel:
    get:
      consumes:
      - application/json
      description: Cancel Order from admin side
      parameters:
      - description: Order ID
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Cancel Order Admin
      tags:
      - Admin Order Management
  /admin/payment-method:
    delete:
      consumes:
      - application/json
      description: Admin can add new payment methods
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete Payment Method
      tags:
      - Admin Payment Method
    get:
      consumes:
      - application/json
      description: Admin can add new payment methods
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Payment Method
      tags:
      - Admin Payment Method
    post:
      consumes:
      - application/json
      description: Admin can add new payment methods
      parameters:
      - description: payment method
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/models.NewPaymentMethod'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Payment Method
      tags:
      - Admin Payment Method
  /admin/products:
    delete:
      consumes:
      - application/json
      description: Delete a product from the admin side
      parameters:
      - description: product id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete product
      tags:
      - Admin Product Management
    get:
      consumes:
      - application/json
      description: Retrieve all product Details
      parameters:
      - description: Page number
        in: query
        name: page
        type: string
      - description: Page Count
        in: query
        name: count
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Products Details
      tags:
      - Admin Product Management
    post:
      consumes:
      - application/json
      description: Add product from admin side
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Products
      tags:
      - Admin Product Management
    put:
      consumes:
      - application/json
      description: Update quantity of already existing product
      parameters:
      - description: Product details
        in: body
        name: productUpdate
        required: true
        schema:
          $ref: '#/definitions/models.ProductUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Update Products quantity
      tags:
      - Admin Product Management
  /admin/products/upload-image:
    post:
      consumes:
      - application/json
      description: Add product Product from admin side
      parameters:
      - description: Product_id
        in: query
        name: product_id
        required: true
        type: integer
      - description: Image file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Product Image
      tags:
      - Admin Product Management
  /admin/sales-report:
    get:
      consumes:
      - application/json
      description: Get Filtered sales report by week, month and year
      parameters:
      - description: sales report
        in: query
        name: period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Filtered Sales Report
      tags:
      - Admin
  /admin/sales-report-date:
    get:
      consumes:
      - application/json
      description: Showing the sales report with respect to the given date
      parameters:
      - description: start date DD-MM-YYYY
        in: query
        name: start
        required: true
        type: string
      - description: end   date DD-MM-YYYY
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: report
          schema:
            type: body
      security:
      - Bearer: []
      summary: Sales report by date
      tags:
      - Admin
  /admin/users:
    get:
      consumes:
      - application/json
      description: Retrieve users with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: string
      - description: Page size
        in: query
        name: count
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Users
      tags:
      - Admin User Management
  /admin/users/block:
    put:
      consumes:
      - application/json
      description: using this handler admins can block an user
      parameters:
      - description: user-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Block User
      tags:
      - Admin User Management
  /admin/users/unblock:
    put:
      consumes:
      - application/json
      description: UnBlock user
      parameters:
      - description: user-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: UnBlock an existing user
      tags:
      - Admin User Management
  /referral/apply:
    get:
      consumes:
      - application/json
      description: Apply referrals amount to order
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Apply referrals
      tags:
      - User Checkout
  /user/address:
    delete:
      consumes:
      - application/json
      description: Delete From User Profile
      parameters:
      - description: address id
        in: query
        name: address_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete User Address
      tags:
      - User Profile
    get:
      consumes:
      - application/json
      description: user can get all their addresses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Addresses
      tags:
      - User Profile
    post:
      consumes:
      - application/json
      description: user can add their addresses
      parameters:
      - description: address
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.AddressInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Address
      tags:
      - User Profile
    put:
      consumes:
      - application/json
      description: Update User address by sending in address id
      parameters:
      - description: address id
        in: query
        name: address_id
        required: true
        type: string
      - description: User Address Input
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.AddressInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Update User Address
      tags:
      - User Profile
  /user/cart:
    delete:
      consumes:
      - application/json
      description: Remove products to carts  for the purchase
      parameters:
      - description: product-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Remove From Cart
      tags:
      - User Cart Management
    get:
      consumes:
      - application/json
      description: Display products to carts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Display Cart
      tags:
      - User Cart Management
    post:
      consumes:
      - application/json
      description: Add products to carts  for the purchase
      parameters:
      - description: product-id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add To Cart
      tags:
      - User Cart Management
  /user/cart/empty:
    delete:
      consumes:
      - application/json
      description: Empty products to carts  for the purchase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Empty Cart
      tags:
      - User Cart Management
  /user/cart/updatequantityadd:
    put:
      consumes:
      - application/json
      description: user can add 1 quantity of product to their cart
      parameters:
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add quantity in cart by one
      tags:
      - User Cart Management
  /user/cart/updatequantityless:
    put:
      consumes:
      - application/json
      description: user can subtract 1 quantity of product from their cart
      parameters:
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Subtract quantity in cart by one
      tags:
      - User Cart Management
  /user/coupon/apply:
    post:
      consumes:
      - application/json
      description: Add coupon to get discount on Checkout section
      parameters:
      - description: Add coupon to order
        in: body
        name: couponDetails
        required: true
        schema:
          $ref: '#/definitions/models.CouponAddUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Apply coupon on Checkout Section
      tags:
      - User Checkout
  /user/forgot-password:
    post:
      consumes:
      - application/json
      description: user can change their password if user forgot the password and
        login
      parameters:
      - description: forgot-send
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordSend'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Forgot password Send OTP
      tags:
      - User
  /user/forgot-password-verify:
    post:
      consumes:
      - application/json
      description: user can change their password if user forgot the password and
        login
      parameters:
      - description: forgot-verify
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ForgotVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Forgot password Verfy and Change
      tags:
      - User
  /user/order:
    get:
      consumes:
      - application/json
      description: Get all order details done by user to user side
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Count
        in: query
        name: count
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Order Details to user side
      tags:
      - User Order Management
    post:
      consumes:
      - application/json
      description: Order all products which is currently present inside  the cart
      parameters:
      - description: Order details
        in: body
        name: orderBody
        required: true
        schema:
          $ref: '#/definitions/models.OrderFromCart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Order Items from cart
      tags:
      - User Order Management
    put:
      consumes:
      - application/json
      description: Cancel order by the user using order ID
      parameters:
      - description: Order ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Cancel order
      tags:
      - User Order Management
  /user/order/checkout:
    get:
      consumes:
      - application/json
      description: Add products to carts  for the purchase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Checkout section
      tags:
      - User Order Management
  /user/order/place-order:
    get:
      consumes:
      - application/json
      description: Add products to carts  for the purchase
      parameters:
      - description: address id
        in: query
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Checkout section
      tags:
      - User Order Management
  /user/products:
    get:
      consumes:
      - application/json
      description: Retrieve all product Details with pagination to users
      parameters:
      - description: Page number
        in: query
        name: page
        type: string
      - description: Page Count
        in: query
        name: count
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Products Details to users
      tags:
      - User Product
  /user/products/filter:
    post:
      consumes:
      - application/json
      description: Show all the Products belonging to a specified category
      parameters:
      - description: Category IDs and quantities
        in: body
        name: data
        required: true
        schema:
          additionalProperties:
            type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Show Products of specified category
      tags:
      - User Product
  /user/products/image:
    get:
      consumes:
      - application/json
      description: Retrieve product images
      parameters:
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Products Details to users
      tags:
      - User Product
  /user/send-otp:
    post:
      consumes:
      - application/json
      description: Send OTP to Authenticate user
      parameters:
      - description: phone number details
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/models.OTPData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: OTP login
      tags:
      - User OTP Login
  /user/signup:
    post:
      consumes:
      - application/json
      description: user can signup by giving their details
      parameters:
      - description: signup
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Signup
      tags:
      - User
  /user/userlogin:
    post:
      consumes:
      - application/json
      description: user can log in by giving their details
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - User
  /user/users:
    get:
      consumes:
      - application/json
      description: User Details from User Profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: User Details
      tags:
      - User Profile
    put:
      consumes:
      - application/json
      description: Update User Details by sending in user id
      parameters:
      - description: User Details Input
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.UsersProfileDetails'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Update User Details
      tags:
      - User Profile
  /user/users/changepassword:
    put:
      consumes:
      - application/json
      description: Change User Password
      parameters:
      - description: User Password Change
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Change User Password
      tags:
      - User Profile
  /user/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP by passing the OTP in order to authenticate user
      parameters:
      - description: Verify OTP Details
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/models.VerifyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify OTP
      tags:
      - User OTP Login
  /user/wishlist:
    delete:
      consumes:
      - application/json
      description: Delete From wish List
      parameters:
      - description: product id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete From Wishlist
      tags:
      - WishList Management
    get:
      consumes:
      - application/json
      description: Display wish List
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Display Wishlist
      tags:
      - WishList Management
    post:
      consumes:
      - application/json
      description: Add To wish List
      parameters:
      - description: product id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add to Wishlist
      tags:
      - WishList Management
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
